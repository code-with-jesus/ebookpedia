drop table USER_ACCOUNT_USER_PROFILE;
drop table USER_PROFILE_PERMISSION;
drop table PERMISSIONS;
drop table USER_PROFILES;
drop table USER_ACCOUNTS;


CREATE TABLE USER_ACCOUNTS (
    ID SERIAL PRIMARY KEY,
    SSO_ID VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(100) NOT NULL,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    AVATAR VARCHAR(100),
    WEBSITE VARCHAR(100),
    BIRTH_DATE TIMESTAMP WITH TIME ZONE,
    LAST_ACTIVITY TIMESTAMP WITH TIME ZONE,
    MEMBER_FROM TIMESTAMP WITH TIME ZONE NOT NULL
);

CREATE UNIQUE INDEX IDX_USER_ACCOUNTS_EMAIL ON USER_ACCOUNTS(EMAIL);
CREATE UNIQUE INDEX IDX_USER_ACCOUNTS_SSO_ID ON USER_ACCOUNTS(SSO_ID);


CREATE TABLE USER_PROFILES (
    ID SERIAL PRIMARY KEY,
    TYPE VARCHAR(100) NOT NULL
);

CREATE TABLE USER_ACCOUNT_USER_PROFILE (
  USER_ACCOUNT_ID INTEGER NOT NULL,
  USER_PROFILE_ID INTEGER NOT NULL,
  PRIMARY KEY (USER_ACCOUNT_ID, USER_PROFILE_ID),
  CONSTRAINT USER_ACCOUNT_USER_PROFILE_FK_1 FOREIGN KEY (USER_ACCOUNT_ID) REFERENCES USER_PROFILES(ID),
  CONSTRAINT USER_ACCOUNT_USER_PROFILE_FK_2 FOREIGN KEY (USER_PROFILE_ID) REFERENCES USER_PROFILES(ID)
);


CREATE TABLE PERMISSIONS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(45) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL
);

CREATE TABLE USER_PROFILE_PERMISSION (
  USER_PROFILE_ID INTEGER NOT NULL,
  PERMISSION_ID INTEGER NOT NULL,
  PRIMARY KEY (USER_PROFILE_ID, PERMISSION_ID),
  CONSTRAINT PERMISSION_USER_PROFILE_FK_1 FOREIGN KEY (USER_PROFILE_ID) REFERENCES USER_PROFILES (ID),
  CONSTRAINT PERMISSION_USER_PROFILE_FK_2 FOREIGN KEY (PERMISSION_ID) REFERENCES PERMISSIONS (ID)
);


INSERT INTO USER_PROFILES VALUES (nextval('user_profiles_id_seq'), 'ADMIN');
INSERT INTO USER_PROFILES VALUES (nextval('user_profiles_id_seq'), 'POSTER');
INSERT INTO USER_PROFILES VALUES (nextval('user_profiles_id_seq'), 'GUEST');



INSERT INTO PERMISSIONS VALUES (nextval('permissions_id_seq'), 'MANAGE USERS', 'Allow manage users in the system');
INSERT INTO PERMISSIONS VALUES (nextval('permissions_id_seq'), 'MANAGE POSTS', 'Allow manage post in the system');
INSERT INTO PERMISSIONS VALUES (nextval('permissions_id_seq'), 'VIEW POSTS', 'Allow only view post in the system');

INSERT INTO USER_ACCOUNTS VALUES (nextval('user_accounts_id_seq'), 'jdyanquen', '123', 'Jesus', 'Yanquen', 'jdyanquen@yopmail.com', null, null, '1988-03-09', now(), now());
INSERT INTO USER_ACCOUNTS VALUES (nextval('user_accounts_id_seq'), 'dacorrea', '123', 'David', 'Correa', 'dacorrea@yopmail.com', null, null, '1988-03-09', now(), now());
INSERT INTO USER_ACCOUNTS VALUES (nextval('user_accounts_id_seq'), 'latorres', '123', 'Laura', 'Torres', 'latorres@yopmail.com', null, null, '1988-03-09', now(), now());


INSERT INTO USER_ACCOUNT_USER_PROFILE VALUES (1,1);
INSERT INTO USER_ACCOUNT_USER_PROFILE VALUES (2,2);
INSERT INTO USER_ACCOUNT_USER_PROFILE VALUES (3,3);

INSERT INTO USER_PROFILE_PERMISSION VALUES (1,1);
INSERT INTO USER_PROFILE_PERMISSION VALUES (1,2);
INSERT INTO USER_PROFILE_PERMISSION VALUES (2,2);
INSERT INTO USER_PROFILE_PERMISSION VALUES (3,3);


CREATE TABLE CATEGORIES (
	ID INT4 PRIMARY KEY,
	"NAME" TEXT NOT NULL
);

CREATE TABLE FILE_TYPES (
	ID INT4 PRIMARY KEY,
	"NAME" TEXT NOT NULL
);

CREATE TABLE LANGUAGES (
	ID INT4 PRIMARY KEY,
	"NAME" TEXT NOT NULL,
	ISO_CODE TEXT NOT NULL
);


CREATE TABLE DOCUMENT_DETAILS (
    ID SERIAL PRIMARY KEY,
    DESCRIPTION TEXT NOT NULL
);

CREATE TABLE DOCUMENTS (
    ID SERIAL PRIMARY KEY,
    COVER_ID TEXT NOT NULL,
    ISBN TEXT NOT NULL,
    TITLE TEXT NOT NULL,
    AUTHORS TEXT NOT NULL,
    PUBLISHER TEXT NOT NULL,
    LANGUAGE_ID INT4,
    FILE_TYPE_ID INT4,
    FILE_SIZE INT8,
    "YEAR" INT4,
    EDITION INT4,
    PAGES INT4,
    DOCUMENT_DETAIL_ID INT4,
    
    CONSTRAINT DOCUMENTS_LANGUAGES_FK FOREIGN KEY (LANGUAGE_ID) REFERENCES LANGUAGES(ID),
    CONSTRAINT DOCUMENTS_FILE_TYPES_FK FOREIGN KEY (FILE_TYPE_ID) REFERENCES FILE_TYPES(ID),
    CONSTRAINT DOCUMENTS_DOCUMENT_DETAIL_FK FOREIGN KEY (DOCUMENT_DETAIL_ID) REFERENCES DOCUMENT_DETAILS(ID)
);

CREATE INDEX IDX_DOCUMENTS_LANGUAGES ON DOCUMENTS(LANGUAGE_ID);
CREATE INDEX IDX_DOCUMENTS_FILE_TYPES ON DOCUMENTS(FILE_TYPE_ID);
CREATE INDEX IDX_DOCUMENTS_DOCUMENT_DETAIL ON DOCUMENTS(DOCUMENT_DETAIL_ID);


CREATE TABLE DOCUMENTS_CATEGORIES (
  DOCUMENT_ID INT4 NOT NULL,
  CATEGORY_ID INT4 NOT NULL,
  PRIMARY KEY (DOCUMENT_ID, CATEGORY_ID),
  CONSTRAINT DOCUMENTS_CATEGORIES_FK_1 FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENTS (ID),
  CONSTRAINT DOCUMENTS_CATEGORIES_FK_2 FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (ID)
);

